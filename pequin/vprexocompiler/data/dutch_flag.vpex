PREAMBLE

PRE-TiTe

PRE-TeTs

HELPER
struct item {
  int color;
  int content;
};

IN
int n
struct item* a[MAX_N];

OUT
struct item* b[MAX_N];

REQ-TiTe

REQ-TeTs

TI
    int j = 0
    int k = n - 1
    loop it1 MAX_N
        if it1 < n
            %c output->b[it1] = input->a[it1];
        end
    endloop
    int i = 0
    loop it2 MAX_N
        if j <= k
            %c struct item* bj = output->b[j];
            %c int color = bj->color;
            if color == 0
                %c struct item* tmp = output->b[i];
                %c output->b[i] = bj;
                %c output->b[j] = tmp;
                i = i + 1
                j = j + 1
            else 
                if color == 2
                    %c struct item* tmp = bj;
                    %c output->b[j] = output->b[k];
                    %c output->b[k] = tmp;
                    k = k - 1
                else
                    j = j + 1
                end
            end
        end
    endloop

    %exo ghostArr bj_color MAX_N
    %exo ghostArr bj_content MAX_N
    %exo loop it3 MAX_N
    %exo %c bj_color[it3] = output->b[it3].color;
    %exo %c bj_content[it3] = output->b[it3].content;
    %exo endloop
    %exo ghostInt k1 = 0
    %exo ghostInt k2 = 0
    %exo ghostArr ord MAX_N

TE
    int cur_color = 0
    %c struct item* b[MAX_N];

    arr count MAX_N
    loop it4 MAX_N
        slot(count, it4).val = 0
    %c b[it4]->color = bj_color[it4];
    %c b[it4]->content = bj_content[it4];
    endloop
    assert_zero k1 < -1
    assert_zero k1 > k2
    assert_zero k2 >= n
    loop it5 MAX_N
        int ord_j = slot(ord, it5).val
        if it5 - 1 == k1
            cur_color = cur_color + 1
        end
        if it5 - 1 == k2
            cur_color = cur_color + 1
        end
        if it5 < n
            assert_zero ord_j >= n
            slot(count, ord_j).val = 1
            %c assert_zero(b[it5] != input->a[ord_j]);

            int tmp_color = slot(bj_color, it5).val
            assert_zero tmp_color - cur_color
        else
            slot(count, it5).val = 1
        end
    endloop
    loop it6 MAX_N
        assert_zero slot(count, it6).val - 1
    endloop

TS

INP
